This problem requires that any given task is only unlocked when 2 independent internal conditions are true, that the left fork and the right fork are on the table. Stictly externally scheduled monitors are only capable of unblocking tasks on the event that a particular external function call is returned from/blocked. Since that is only 1 piece of information, it is not possible to implement the philosophers' problem concurrently, since any externally-scheduled solution would require iterating accross all of the forks/philosophers at each pick put down event, thus making it serial.
